name: Docker-amd64

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ "main", "gh_actions", "feat/*", "dev" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/guestfish
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.8.1
        with:
          cosign-release: 'v2.5.0'

      - name: Setup Docker buildx
        uses: sigstore/cosign-installer@v3.8.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image to latest
        id: build-and-push-latest
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/guestfish:latest
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          platforms: linux/amd64
        if: github.ref_name == 'main'

          
      # - name: Build and push Docker image to test
      #   id: build-and-push-test
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     platforms: linux/amd64
      #   if: github.ref_name != 'main'

      - name: Sign the published Docker image (latest)
        if: ${{ github.event_name != 'pull_request' && github.ref_name == 'main' }}
        env:
          COSIGN_EXPERIMENTAL: "true"

        run: echo "ghcr.io/${{ github.repository_owner }}/guestfish:latest" | xargs -I {} cosign sign -y {}@${{ steps.build-and-push-latest.outputs.digest }}

      # - name: Sign the published Docker image (testing)
      #   if: ${{ github.event_name != 'pull_request' && github.ref_name != 'main' }}
      #   env:
      #     COSIGN_EXPERIMENTAL: "true"

      #   run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push-test.outputs.digest }}